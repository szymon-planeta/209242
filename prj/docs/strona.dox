 
/*!
\page Sprawozdanie
\date 19.03.2015r.
\version 0.1
\section Zadanie
Celem ćwiczenie było stworzenie trzech abstrakcyjnych typów danych :\n
-Kolejki (LIFO) \n
-Stosu (FIFO) \n
-Kolejki \n
Oraz mierzenie czasu jaki potrzeba aby zapełnić każdy z nich określoną ilością danych
\section Wyniki

Dla stu tysięcy operacji komputer jest w stanie przeprowadzić badane operacje w rozsądnym czasie.
Na podstawie otrzymanych danych mamy :\n


\image latex 1.png
\image latex 2.png
\image latex 3.png

\section Podsumowanie
	 Uzyskane charakterystyki wskazują na liniową złożoność oblizeniową co jest zgodne z oczekiwaniami.\n
Stos i kolejka zostały zrealizowane za pomocą listy , natomiast sama lista dodawała następny element zawsze na swój koniec ( musiała za każdym razem "przechodzić" przez wszystkie swoje elementy) nie dziwi więc zatem że czas wykonywania algorytmu w tym przypadku był bardzo długi. \n
Mimo wszystko uważam  że algorytm dodający elementy do struktury lista jes bardzo wysoce nieefektywny, i w zasadzie stos czy kolejka są zrealizowane za pomocą listy czyli de facto implementacja listy jako oddzielnej klasy ( dodatkowo takiej w którym funkcja push() przechodzi przez wszystkie elementy) jest bezsensowna i o ile dobrze rozumiem postawione zadanie zbędna.\n
Uważam również iż powinno się dodatkowo opróżniać pamięć po każdorazowym wykonaniu się algorytmu dla każdej ilości danych, co należałoby zmienić jednak wymagało by to przerywania zliczania czasu. 

*/